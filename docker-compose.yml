services:
  # PostgreSQL Database
  postgres:
    image: postgres
    container_name: lunchuis-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME:-userdefault}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-defaultpass}
      POSTGRES_DB: ${DB_NAME:-dbdefault}
    # Port mapping: host_port:container_port
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - postgres-data:/var/lib/postgresql
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - lunchuis-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME:-userdefault} -d ${DB_NAME:-dbdefault}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Config Server
  config-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: config-server-runtime
    container_name: lunchuis-config-server
    env_file:
      - .env
    ports:
      - 8888:8888
    networks:
      - lunchuis-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Identity Service
  identity-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: identity-server-runtime
    container_name: lunchuis-identity-service
    env_file:
      - .env
    ports:
      - 8081:8081
    networks:
      - lunchuis-net
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
    restart: unless-stopped


  # Combo Server
  combo-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: combo-server-runtime
    container_name: lunchuis-combo-service
    env_file:
      - .env
    ports:
      - "8082:8082"
    networks:
      - lunchuis-net
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
    restart: unless-stopped

  # Order Server
  order-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: order-server-runtime
    container_name: lunchuis-order-service
    env_file:
      - .env
    ports:
      - "8083:8083"
    networks:
      - lunchuis-net
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
    restart: unless-stopped

# Define the named volume for data persistence
volumes:
  postgres-data:

# Define the custom network
networks:
  lunchuis-net:
    driver: bridge